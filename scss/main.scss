//Patial scss files: this will automaitcally import all the code from _resets and wil be compiled into the main.css 
@import './resets';
@import './variables';
/* 
css variables 
:root{
   --primary:#000;
} */
/*Sccs variables, we can also get them inside a _variables and import them*/

//scss functions we can 
@function weight($weight-name){
   @return map-get($font-weights , $weight-name ) 
};

//mixins: i can use a mix in that contains a piece of code and then use that mixin iin every component that need that exact code:  
@mixin flexCenter($direction){
   display: flex;
   justify-content: center;
   align-items: center;
   flex-direction: $direction;
}

@mixin theme($light-theme:true){
   @if $light-theme{
      background-color:lighten($third,100%);
      color:darken($secondary,100%);
   }
}

@mixin mobile{
   @media(max-width:$mobile){
      @content
   }
}

body{
   background-color: $primary;
   font-weight: map-get($font-weights , normal );
}
//Nesting with sass: you can have varois elements nested bwtween
.main{
   @include flexCenter(column);
   /*Operation can be done by just + - * / without using calc()*/
   width: 80%-40%;
   margin:0 auto;
   #{&}-paragraph1{
      color:$secondary;
      font-weight: map-get($font-weights , regular );
      //we can also use a function to the the font-weight: 
      font-weight: weight(bold);
      &:hover{
         color:black;
      }
   }
   /*So using extend I can get the properties form -main-paragraph1 and put them here and even overwrite them*/
   #{&}-paragraph2{
      @extend .main-paragraph1;
      &:hover{
         color:$primary;
      }
   }
   //here im invokinig my mexin and setting the content ot be flex:row and since the media is already declared it will apply it when the size of screen decas below 800px
   @include mobile{
      flex-direction: row;
   }
}


.light{
   @include theme($light-theme:false)
}